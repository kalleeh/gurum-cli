"""
This is a sample, non-production-ready template.

© 2019 Amazon Web Services, In​c. or its affiliates. All Rights Reserved.

This AWS Content is provided subject to the terms of the
AWS Customer Agreement available at http://aws.amazon.com/agreement
or other written agreement between Customer and either
Amazon Web Services, Inc. or Amazon Web Services EMEA SARL or both.
"""

import click

from .context import Context


def debug_option(f):
    """
    Configures --debug option for CLI

    :param f: Callback Function to be passed to Click
    """
    def callback(ctx, _param, value):
        state = ctx.ensure_object(Context)
        state.debug = value
        return value

    return click.option('--debug',
                        expose_value=False,
                        is_flag=True,
                        envvar="GURUM_DEBUG",
                        help='Turn on debug logging to print debug message generated by GURUM CLI.',
                        callback=callback)(f)


def config_option(f):
    """
    Configures --config option for CLI

    :param f: Callback Function to be passed to Click
    """
    def callback(ctx, _param, value):
        state = ctx.ensure_object(Context)
        state.config = value
        return value

    return click.option('--config',
                        expose_value=False,
                        envvar="GURUM_CONFIG",
                        help='Specify configuration file to be used for the GURUM CLI.',
                        callback=callback)(f)


def region_option(f):
    """
    Configures --region option for CLI

    :param f: Callback Function to be passed to Click
    """
    def callback(ctx, _param, value):
        state = ctx.ensure_object(Context)
        state.region = value
        return value

    return click.option('--region',
                        expose_value=False,
                        help='Set the AWS Region of the service (e.g. us-east-1).',
                        callback=callback)(f)


def profile_option(f):
    """
    Configures --profile option for CLI

    :param f: Callback Function to be passed to Click
    """
    def callback(ctx, _param, value):
        state = ctx.ensure_object(Context)
        state.profile = value
        return value

    return click.option('--profile',
                        expose_value=False,
                        help='Select a specific profile from your credential file to get AWS credentials.',
                        callback=callback)(f)
